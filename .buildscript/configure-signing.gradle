apply plugin: "signing"
apply plugin: "com.vanniktech.maven.publish"

// Find the first non-null Gradle property or environment variable
// corresponding to the given names, giving preference to Gradle properties.
String propOrEnv(String... names) {
    // hasProperty, getProperty don't work when called directly in a closure;
    // they need a receiver that knows about properties, like rootProject.
    def p = rootProject
    def result = names.findResult { p.hasProperty(it) ? p.getProperty(it) : System.getenv(it) }
    if (result == null) {
        logger.error("Missing gradle property or environment variable: $names")
    }
    return result
}

if (project.hasProperty('releaseBuild')) {
    println "configuring signing key"

    Properties properties = new Properties()
    if (project.rootProject.file('local.properties').exists()) {
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
    }

    // signing {
    //     def signingKeyFilename = properties.signingKey

    //     def signingKey = "${project.rootProject.file(signingKeyFilename).newDataInputStream()}"
    //     def signingPassword = properties.signingPassword

    //     useInMemoryPgpKeys(signingKey, signingPassword)
    // }

    mavenPublish {
        releaseSigningEnabled = false
        targets {
            // Modify the existing uploadArchives task
            uploadArchives {
                // release
                // repositoryUsername = properties.SONATYPE_NEXUS_USERNAME
                // repositoryPassword = properties.SONATYPE_NEXUS_PASSWORD
                releaseRepositoryUrl = propOrEnv("ARTIFACTORY_URL", "instacart_artifactory_url")
                snapshotRepositoryUrl = propOrEnv("ARTIFACTORY_URL", "instacart_artifactory_url")
                repositoryUsername = propOrEnv("ARTIFACTORY_USERNAME", "instacart_artifactory_username") 
                repositoryPassword = propOrEnv("ARTIFACTORY_PASSWORD", "instacart_artifactory_password")
            }
        }
    }
} else {
    mavenPublish {
        releaseSigningEnabled = false
    }
}
