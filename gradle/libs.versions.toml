[versions]
android-gradle = "8.2.0"
dokka-gradle = "1.4.32"

kotlin = "1.9.20"
coroutines = "1.5.2"
compose = "1.5.4"

androidX = "1.2.0"
lifecycle = "2.2.0"
lifecycleKtx = '2.4.0-alpha03'
androidTest = "1.4.0"
espresso = "3.4.0"
robolectric = "4.6.1"
lint = "30.0.0"
autoService = "1.0-rc7"

[libraries]
android-gradle = { module = "com.android.tools.build:gradle", version.ref = "android-gradle" }
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
dokka-gradle = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka-gradle" }
dokka-android-gradle = { module = "org.jetbrains.dokka:android-documentation-plugin", version.ref = "dokka-gradle" }
maven-publish-gradle = { module = "com.vanniktech:gradle-maven-publish-plugin", version = "0.14.2" }
version-gradle = { module = "com.github.ben-manes:gradle-versions-plugin", version = "0.38.0" }

# We need to fork the plugin to fix an incorrect usage of tasks.withType(Test)
# https://github.com/vanniktech/gradle-android-junit-jacoco-plugin/compare/master...Laimiux:gradle-android-junit-jacoco-plugin:laimonas/gradle-8?expand=1
jacoco-gradle = { module = "com.github.Jawnnypoo:gradle-android-junit-jacoco-plugin", version = "61a9cc0129" }

kotlin = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }

coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-rxjava3 = { module = "androidx.compose.runtime:runtime-rxjava3", version.ref = "compose" }

androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidX" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidX" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "androidX" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version = "2.1.0" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version = "1.3.1"}
androidx-activity-ktx = { module = "androidx.activity:activity-ktx", version = "1.3.1" }
androidx-test-core-ktx = { module = "androidx.test:core-ktx", name = "core-ktx", version.ref = "androidTest" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidTest" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidTest" }
androidx-test-junit = { module = "androidx.test.ext:junit", version = "1.1.0" }

lifecycle-extensions = { module = "androidx.lifecycle:lifecycle-extensions", version.ref = "lifecycle" }
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleKtx" }

espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }

rxjava = { module = "io.reactivex.rxjava3:rxjava", version = "3.1.1" }
rxandroid = { module = "io.reactivex.rxjava3:rxandroid", version = "3.0.0" }
rxrelay = { module = "com.jakewharton.rxrelay3:rxrelay", version = "3.0.1" }

truth = { module = "com.google.truth:truth", version = "1.1.3" }
junit = { module = "junit:junit", version = "4.13.2" }
rxrelays = { module = "com.jakewharton.rxrelay3:rxrelay", version = "3.0.1" }

mockito-core = { module = "org.mockito:mockito-core", version = "5.7.0" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version = "5.2.1" }

lint-core = { module = "com.android.tools.lint:lint", version.ref = "lint" }
lint-api = { module = "com.android.tools.lint:lint-api", version.ref = "lint" }
lint-checks = { module = "com.android.tools.lint:lint-checks", version.ref = "lint" }
lint-tests = { module = "com.android.tools.lint:lint-tests", version.ref = "lint" }

auto-service = { module = "com.google.auto.service:auto-service ", version.ref = "autoService" }
auto-service-annotations = { module = "com.google.auto.service:auto-service-annotations", version.ref = "autoService" }