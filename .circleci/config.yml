version: 2.1

references:
  cache_key: &cache_key jars-v1-{{ checksum "build.gradle" }}-{{ checksum  "formula/build.gradle" }}
  workspace_dir: &workspace_dir /home/circleci

commands:
  cache_restore:
    description: Restore cache
    steps:
      - restore_cache:
          key: *cache_key

  cache_populate:
    description: Populate cache
    steps:
      - run:
          name: Populate cache
          command: ./gradlew androidDependencies

  cache_save:
    description: Save cache
    steps:
      - save_cache:
          key: *cache_key
          paths:
            - ~/.gradle
            - ~/.m2

  prepare:
    description: Initial job setup steps
    steps:
      - checkout
      - cache_restore
      - cache_populate
      - cache_save
      - run:
          name: Prepare environment
          command: ./ci_postclone.sh
      - attach_workspace:
          at: *workspace_dir

  test_save:
    description: Save test results and artifacts
    parameters:
      suite:
        type: string
    steps:
      - store_test_results:
          path: ~/<< parameters.suite >>
      - store_artifacts:
          path: ~/<< parameters.suite >>
      - persist_to_workspace:
          root: *workspace_dir
          paths: << parameters.suite >>

  test:
    description: Run unit tests
    steps:
      - run:
          name: Run Core Tests
          command: |
            ./gradlew :formula:test
      - run:
          name: Run Formula Android Unit Tests
          command: |
            ./gradlew :formula-android:testRelease
      - run:
          name: Run Formula Android Instrumentation Tests
          command: |
            ./gradlew :formula-android-tests:testRelease
      - run:
          name: Generate Jacoco Report
          command: |
            ./gradlew jacocoTestReportMerged
      - run:
          name: Save Jacoco Report
          command: |
            mkdir -p ~/jacoco/
            find . -type f -regex ".*/build/reports/jacoco/jacoco.xml" -exec cp {} ~/jacoco/ \;
          when: always
      - run:
          name: Save test results
          command: |
            ./gradlew mergeReports --max-workers 4
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/reports/allTests/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - test_save:
          suite: junit
      - test_save:
          suite: jacoco

  assemble_samples:
    description: Assemble Samples
    steps:
      - run:
          name: Assemble Counter
          command: |
            ./gradlew :samples:counter:assembleDebug --no-daemon
      - run:
          name: Assemble Stopwatch Sample
          command: |
            ./gradlew :samples:stopwatch:assembleDebug --no-daemon
      - run:
          name: Assemble Todo App
          command: |
            ./gradlew :samples:todoapp:assembleDebug --no-daemon
      - run:
          name: Assemble Custom Stream App
          command: |
            ./gradlew :samples:custom-network-state-stream:assembleDebug --no-daemon
      - run:
          name: Assemble Composition Sample
          command: |
            ./gradlew :samples:composition:assembleDebug --no-daemon

executors:
  android:
    docker:
      - image: circleci/android:api-28
    resource_class: medium
    working_directory: ~/code
    environment:
      # Java is really greedy, let's minimize how much memory it takes
      JAVA_TOOL_OPTIONS: '-Xmx512m'
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx6g -XX:+HeapDumpOnOutOfMemoryError"'
      JVM_OPTS: '-Xmx3200m'

jobs:
  test:
    executor: android
    steps:
      - prepare
      - test
      - assemble_samples

  check:
    executor: android
    steps:
      - prepare
      - run: bundle exec danger --verbose

workflows:
  version: 2

  deploy:
    jobs:
      - test
      - check:
          requires:
            - test
          filters:
            tags:
              ignore: /.*/
            branches:
              ignore:
                - master
