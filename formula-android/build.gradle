apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "com.github.ben-manes.versions"

apply from: rootProject.file('.buildscript/configure-dokka.gradle')
apply from: rootProject.file('.buildscript/configure-signing.gradle')
apply from: rootProject.file('.buildscript/jacoco-workaround.gradle')

androidExtensions {
    experimental = true
    features = ['parcelize']
}

android {
    compileSdkVersion constants.compileSdk

    defaultConfig {
        minSdkVersion constants.minSdk
        targetSdkVersion constants.targetSdk
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    setArchiveClassifier('sources')
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    setArchiveClassifier('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

dependencies {
    implementation project(':formula-rxjava3')

    implementation libraries.androidx.annotation
    implementation libraries.androidx.appcompat

    api libraries.rxandroid
    api libraries.rxrelays

    testImplementation libraries.androidx.test.rules
    testImplementation libraries.androidx.test.runner
    testImplementation libraries.androidx.test.espresso.core

    testImplementation libraries.truth
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"
    testImplementation "com.nhaarman:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation libraries.kotlinReflect
}
